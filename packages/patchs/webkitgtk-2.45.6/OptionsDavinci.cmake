WEBKIT_OPTION_BEGIN()

set(WEBKIT_API_VERSION "6.0")
set(WEBKIT_VERSION 6)
set(WEBKIT_VERSION_MAJOR 1)

find_package(Threads REQUIRED)
find_package(OpenGLES2 REQUIRED)
if (NOT WIN32)
    find_package(Fontconfig REQUIRED)
endif ()

if (MSVC)
    include(OptionsMSVC)
else ()
    set(CMAKE_C_VISIBILITY_PRESET hidden)
    set(CMAKE_CXX_VISIBILITY_PRESET hidden)
    set(CMAKE_VISIBILITY_INLINES_HIDDEN ON)
endif ()

if(WIN32)
    set(LIB_PREFIX "")
    set(LIB_EXT "lib")
    set(LIBA_EXT "lib")
else()
    set(LIB_PREFIX "lib")
    set(LIB_EXT "so")
    set(LIBA_EXT "a")
endif()

add_library(ICU::data UNKNOWN IMPORTED PUBLIC icudt)
set_target_properties(ICU::data PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}icudt.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
)
add_library(ICU::i18n UNKNOWN IMPORTED PUBLIC icui18n)
set_target_properties(ICU::i18n PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}icui18n.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
)
add_library(ICU::uc UNKNOWN IMPORTED PUBLIC icuuc)
set_target_properties(ICU::uc PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}icuuc.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
)
add_library(LibXml2::LibXml2 UNKNOWN IMPORTED PUBLIC xml2)
set_target_properties(LibXml2::LibXml2 PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}xml2.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include/libxml2"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(LibXslt::LibXslt UNKNOWN IMPORTED PUBLIC xslt)
set_target_properties(LibXslt::LibXslt PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}xslt.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(SQLite::SQLite3 UNKNOWN IMPORTED PUBLIC sqlite3)
set_target_properties(SQLite::SQLite3 PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}sqlite3.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(ZLIB::ZLIB UNKNOWN IMPORTED PUBLIC zlib)
set_target_properties(ZLIB::ZLIB PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}z.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(JPEG::JPEG UNKNOWN IMPORTED PUBLIC jpeg)
set_target_properties(JPEG::JPEG PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}jpeg.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(PNG::PNG UNKNOWN IMPORTED PUBLIC png)
set_target_properties(PNG::PNG PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}png.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(Freetype::Freetype UNKNOWN IMPORTED PUBLIC freetype)
set_target_properties(Freetype::Freetype PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}freetype.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include/freetype2"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(WebP::WebP UNKNOWN IMPORTED PUBLIC webp)
set_target_properties(WebP::WebP PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}webp.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(WebP::mux UNKNOWN IMPORTED PUBLIC webpmux)
set_target_properties(WebP::mux PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}webpmux.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(WebP::demux UNKNOWN IMPORTED PUBLIC webpdemux)
set_target_properties(WebP::demux PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}webpdemux.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(LCMS2::LCMS2 UNKNOWN IMPORTED PUBLIC lcms2)
set_target_properties(LCMS2::LCMS2 PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}lcms2.${LIBA_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(WOFF2::dec UNKNOWN IMPORTED PUBLIC woff2dec)
set_target_properties(WOFF2::dec PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}woff2dec.${LIBA_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
)
add_library(HarfBuzz::HarfBuzz UNKNOWN IMPORTED PUBLIC harfbuzz)
set_target_properties(HarfBuzz::HarfBuzz PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}harfbuzz.${LIBA_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include/harfbuzz"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(HarfBuzz::ICU UNKNOWN IMPORTED PUBLIC harfbuzz-icu)
set_target_properties(HarfBuzz::ICU PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}harfbuzz-icu.${LIBA_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include/harfbuzz"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)
add_library(CURL::libcurl UNKNOWN IMPORTED PUBLIC curl)
set_target_properties(CURL::libcurl PROPERTIES
    IMPORTED_LOCATION "${WORKSPACE_OUT}/lib/${LIB_PREFIX}curl.${LIB_EXT}"
    INTERFACE_INCLUDE_DIRECTORIES "${WORKSPACE_OUT}/include"
    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
)

WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_SKIA PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DRAG_SUPPORT PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MINIBROWSER PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_PDFJS PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SPELLCHECK PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_TOUCH_EVENTS PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEBDRIVER PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_GAMEPAD PUBLIC OFF)

WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_LCMS PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_WOFF2 PUBLIC ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_AVIF PUBLIC OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_JPEGXL PUBLIC OFF)

WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ASYNC_SCROLLING PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_AUTOCAPITALIZE PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_CONTENT_EXTENSIONS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_CURSOR_VISIBILITY PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DARK_MODE_CSS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DATALIST_ELEMENT PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_DATE_AND_TIME_INPUT_TYPES PRIVATE ON)
#WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_ENCRYPTED_MEDIA PRIVATE ${ENABLE_EXPERIMENTAL_FEATURES})
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_REMOTE_INSPECTOR PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_FTPDIR PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_GPU_PROCESS PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_COLOR PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_DATE PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_DATETIMELOCAL PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_MONTH PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_TIME PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_INPUT_TYPE_WEEK PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_RECORDER PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_SESSION PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_SESSION_PLAYLIST PRIVATE OFF)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_STREAM PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MHTML PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MODERN_MEDIA_CONTROLS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MEDIA_CONTROLS_CONTEXT_MENUS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_MOUSE_CURSOR_SCALE PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_NETWORK_CACHE_SPECULATIVE_REVALIDATION PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_NETWORK_CACHE_STALE_WHILE_REVALIDATE PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_OFFSCREEN_CANVAS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_OFFSCREEN_CANVAS_IN_WORKERS PRIVATE ON)
#WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_THUNDER PRIVATE ${ENABLE_DEVELOPER_MODE})
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_PERIODIC_MEMORY_MONITOR PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_POINTER_LOCK PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SHAREABLE_RESOURCE PRIVATE ON)
#WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_SPEECH_SYNTHESIS PRIVATE ${ENABLE_EXPERIMENTAL_FEATURES})
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_VARIATION_FONTS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_API_STATISTICS PRIVATE ON)
WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_CODECS PRIVATE ON)
#WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_WEB_RTC PRIVATE ${ENABLE_EXPERIMENTAL_FEATURES})

WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_SYSPROF_CAPTURE PRIVATE OFF)

if (WIN32)
    # FIXME: Enable FTL on Windows. https://bugs.webkit.org/show_bug.cgi?id=145366
    WEBKIT_OPTION_DEFAULT_PORT_VALUE(ENABLE_FTL_JIT PRIVATE OFF)
    # FIXME: Port bmalloc to Windows. https://bugs.webkit.org/show_bug.cgi?id=143310
    #WEBKIT_OPTION_DEFAULT_PORT_VALUE(USE_SYSTEM_MALLOC PRIVATE ON)
    add_definitions(-DNOMINMAX)
    add_definitions(-D_WINDOWS -DWINVER=0x601 -D_WIN32_WINNT=0x601)
    add_definitions(-DUNICODE -D_UNICODE)
    set(USE_ANGLE_EGL ON)
endif ()

SET_AND_EXPOSE_TO_BUILD(USE_TEXTURE_MAPPER ON)
SET_AND_EXPOSE_TO_BUILD(USE_EGL ON)
SET_AND_EXPOSE_TO_BUILD(USE_COORDINATED_GRAPHICS ON)
SET_AND_EXPOSE_TO_BUILD(USE_NICOSIA ON)
SET_AND_EXPOSE_TO_BUILD(USE_ANGLE ${ENABLE_WEBGL})

if (NOT WIN32)
WEBKIT_APPEND_GLOBAL_COMPILER_FLAGS(-pipe)
endif ()

WEBKIT_APPEND_GLOBAL_COMPILER_FLAGS(-DWTF_PLATFORM_DAVINCI=1)

set(WTF_LIBRARY_TYPE SHARED)
set(JavaScriptCore_LIBRARY_TYPE SHARED)
set(WebCore_LIBRARY_TYPE SHARED)
set(WebKitLegacy_LIBRARY_TYPE SHARED)
set(WebKit_LIBRARY_TYPE SHARED)
set(SHOULD_INSTALL_JS_SHELL ON)

WEBKIT_OPTION_END()
